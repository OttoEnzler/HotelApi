// <auto-generated />
using System;
using HotelApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HotelApi.Migrations
{
    [DbContext(typeof(HotelApiContext))]
    [Migration("20250430125337_AñadiTablaUsuario")]
    partial class AñadiTablaUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HotelApi.Models.Cancelacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetalleReservaId")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("DetalleReservaId");

                    b.ToTable("Cancelacion");
                });

            modelBuilder.Entity("HotelApi.Models.Checkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("Checkin");
                });

            modelBuilder.Entity("HotelApi.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ReservaId")
                        .IsUnique();

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("HotelApi.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("HotelApi.Models.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("HotelApi.Models.DetalleHuesped", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("CheckInId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumDocumento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CheckInId");

                    b.ToTable("DetalleHuesped");
                });

            modelBuilder.Entity("HotelApi.Models.DetalleReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("CantidadAdultos")
                        .HasColumnType("int");

                    b.Property<int>("CantidadNinhos")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HabitacionId")
                        .HasColumnType("int");

                    b.Property<int>("PensionId")
                        .HasColumnType("int");

                    b.Property<int>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HabitacionId");

                    b.HasIndex("PensionId");

                    b.HasIndex("ReservaId");

                    b.ToTable("DetalleReserva");
                });

            modelBuilder.Entity("HotelApi.Models.EstadoReserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EstadoReserva");
                });

            modelBuilder.Entity("HotelApi.Models.Habitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroHabitacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoHabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("Habitacion");
                });

            modelBuilder.Entity("HotelApi.Models.ImagenHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("TipoHabitacionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoHabitacionId");

                    b.ToTable("ImagenHabitacion");
                });

            modelBuilder.Entity("HotelApi.Models.Pension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioAdicional")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("Pension");
                });

            modelBuilder.Entity("HotelApi.Models.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime2");

                    b.Property<TimeOnly?>("LlegadaEstimada")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Reserva");
                });

            modelBuilder.Entity("HotelApi.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IconName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("HotelApi.Models.Solicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CancelacionId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EsLeida")
                        .HasColumnType("bit");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CancelacionId");

                    b.HasIndex("ConsultaId")
                        .IsUnique()
                        .HasFilter("[ConsultaId] IS NOT NULL");

                    b.HasIndex("ReservaId");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("HotelApi.Models.TipoDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("HotelApi.Models.TipoHabitacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Actualizacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<DateTime>("Creacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.ToTable("TipoHabitacion");
                });

            modelBuilder.Entity("ServicioTipoHabitacion", b =>
                {
                    b.Property<int>("ServiciosId")
                        .HasColumnType("int");

                    b.Property<int>("TiposHabitacionesId")
                        .HasColumnType("int");

                    b.HasKey("ServiciosId", "TiposHabitacionesId");

                    b.HasIndex("TiposHabitacionesId");

                    b.ToTable("ServicioTipoHabitacion");
                });

            modelBuilder.Entity("HotelApi.Models.Cancelacion", b =>
                {
                    b.HasOne("HotelApi.Models.DetalleReserva", "DetalleReserva")
                        .WithMany()
                        .HasForeignKey("DetalleReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DetalleReserva");
                });

            modelBuilder.Entity("HotelApi.Models.Checkin", b =>
                {
                    b.HasOne("HotelApi.Models.Reserva", "Reserva")
                        .WithOne("Checkin")
                        .HasForeignKey("HotelApi.Models.Checkin", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("HotelApi.Models.Checkout", b =>
                {
                    b.HasOne("HotelApi.Models.Reserva", "Reserva")
                        .WithOne("Checkout")
                        .HasForeignKey("HotelApi.Models.Checkout", "ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("HotelApi.Models.Cliente", b =>
                {
                    b.HasOne("HotelApi.Models.TipoDocumento", "TipoDocumento")
                        .WithMany("Clientes")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoDocumento");
                });

            modelBuilder.Entity("HotelApi.Models.DetalleHuesped", b =>
                {
                    b.HasOne("HotelApi.Models.Checkin", "CheckIn")
                        .WithMany("DetalleHuespedes")
                        .HasForeignKey("CheckInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckIn");
                });

            modelBuilder.Entity("HotelApi.Models.DetalleReserva", b =>
                {
                    b.HasOne("HotelApi.Models.Habitacion", "Habitacion")
                        .WithMany("DetalleReservas")
                        .HasForeignKey("HabitacionId");

                    b.HasOne("HotelApi.Models.Pension", "Pension")
                        .WithMany("DetallesReservas")
                        .HasForeignKey("PensionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApi.Models.Reserva", "Reserva")
                        .WithMany("Detalles")
                        .HasForeignKey("ReservaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitacion");

                    b.Navigation("Pension");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("HotelApi.Models.Habitacion", b =>
                {
                    b.HasOne("HotelApi.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany("Habitaciones")
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("HotelApi.Models.ImagenHabitacion", b =>
                {
                    b.HasOne("HotelApi.Models.TipoHabitacion", "TipoHabitacion")
                        .WithMany("ImagenesHabitaciones")
                        .HasForeignKey("TipoHabitacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoHabitacion");
                });

            modelBuilder.Entity("HotelApi.Models.Reserva", b =>
                {
                    b.HasOne("HotelApi.Models.Cliente", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApi.Models.EstadoReserva", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("HotelApi.Models.Solicitud", b =>
                {
                    b.HasOne("HotelApi.Models.Cancelacion", "Cancelacion")
                        .WithMany()
                        .HasForeignKey("CancelacionId");

                    b.HasOne("HotelApi.Models.Consulta", "Consulta")
                        .WithOne("Solicitud")
                        .HasForeignKey("HotelApi.Models.Solicitud", "ConsultaId");

                    b.HasOne("HotelApi.Models.Reserva", "Reserva")
                        .WithMany()
                        .HasForeignKey("ReservaId");

                    b.Navigation("Cancelacion");

                    b.Navigation("Consulta");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("ServicioTipoHabitacion", b =>
                {
                    b.HasOne("HotelApi.Models.Servicio", null)
                        .WithMany()
                        .HasForeignKey("ServiciosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelApi.Models.TipoHabitacion", null)
                        .WithMany()
                        .HasForeignKey("TiposHabitacionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelApi.Models.Checkin", b =>
                {
                    b.Navigation("DetalleHuespedes");
                });

            modelBuilder.Entity("HotelApi.Models.Cliente", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("HotelApi.Models.Consulta", b =>
                {
                    b.Navigation("Solicitud")
                        .IsRequired();
                });

            modelBuilder.Entity("HotelApi.Models.Habitacion", b =>
                {
                    b.Navigation("DetalleReservas");
                });

            modelBuilder.Entity("HotelApi.Models.Pension", b =>
                {
                    b.Navigation("DetallesReservas");
                });

            modelBuilder.Entity("HotelApi.Models.Reserva", b =>
                {
                    b.Navigation("Checkin");

                    b.Navigation("Checkout");

                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("HotelApi.Models.TipoDocumento", b =>
                {
                    b.Navigation("Clientes");
                });

            modelBuilder.Entity("HotelApi.Models.TipoHabitacion", b =>
                {
                    b.Navigation("Habitaciones");

                    b.Navigation("ImagenesHabitaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
